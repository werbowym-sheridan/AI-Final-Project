# -*- coding: utf-8 -*-
"""ai-final-project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y4tzd4f-FnRkn6eY1ZbxNzkh2ytdKjQI
"""

!wget -q https://archive.ics.uci.edu/static/public/189/parkinsons+telemonitoring.zip
!unzip -q parkinsons+telemonitoring.zip

!pip install pycaret[full]

import pandas as pd
import pycaret
from pycaret.regression import *

# displaying first few rows of the parkinsons dataset
print("Dataset preview:")
df = pd.read_csv('parkinsons_updrs.data')
df.head()

# Drop unwanted columns
df = df.drop(columns=["subject#", "motor_UPDRS"])

print("Preprocessed data preview:")
df.head()

from pycaret.regression import setup, compare_models

setup(data=df, target='total_UPDRS', session_id=123)  # Directly call setup() from pycaret.regression

# compare baseline models
best = compare_models()

# Print the best model
print(f"The best model is:\n{best}")

#create a model using the best model
create_model(best)

# plot residuals
plot_model(best, plot = 'residuals')

# plot error
plot_model(best, plot = 'error')

# plot feature importance
plot_model(best, plot = 'feature')

evaluate_model(best)

# predict on test set
holdout_pred = predict_model(best)

# Display evaluation results
print("Evaluation Results:")
print(holdout_pred.head())


# Calculate R2 Score (accuracy metric)
from sklearn.metrics import r2_score

# Use the actual target and predicted values
y_true = holdout_pred["total_UPDRS"]  # True target values
y_pred = holdout_pred["prediction_label"]  # Predicted values from PyCaret

# Calculate R2 Score
r2 = r2_score(y_true, y_pred)
print(f"R2 Score (Accuracy): {r2:.4f}")